Ass -4


1)Write a C program that illustrates inter process communication using shared memory.

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/types.h>

#define SHM_SIZE 1024  

int main() {
    key_t key = ftok("shmfile", 65);  

    int shmid = shmget(key, SHM_SIZE, 0666|IPC_CREAT);
    if (shmid == -1) {
        perror("shmget");
        exit(1);
    }

    pid_t pid = fork();

    if (pid == 0) {
        // Child process (Writer)

        char *shared_memory = (char*) shmat(shmid, NULL, 0);
        if (shared_memory == (char*)-1) {
            perror("shmat");
            exit(1);
        }

        char message[] = "Hello from the child process!";
        strncpy(shared_memory, message, sizeof(message));
        printf("Child wrote: %s\n", shared_memory);

        shmdt(shared_memory);

    } else if (pid > 0) {
        // Parent process (Reader)

        sleep(1);

        char *shared_memory = (char*) shmat(shmid, NULL, 0);
        if (shared_memory == (char*)-1) {
            perror("shmat");
            exit(1);
        }

        printf("Parent read: %s\n", shared_memory);


        shmdt(shared_memory);

        shmctl(shmid, IPC_RMID, NULL);
    } else {
        perror("fork");
        exit(1);
    }

    return 0;
}
